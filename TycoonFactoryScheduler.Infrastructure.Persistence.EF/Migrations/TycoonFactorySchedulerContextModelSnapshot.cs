// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TycoonFactoryScheduler.Infrastructure.Persistence.EF;

#nullable disable

namespace TycoonFactoryScheduler.Infrastructure.Persistence.EF.Migrations
{
    [DbContext(typeof(TycoonFactorySchedulerContext))]
    partial class TycoonFactorySchedulerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ActivityWorker", b =>
                {
                    b.Property<int>("ActivitiesId")
                        .HasColumnType("int");

                    b.Property<string>("WorkersId")
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ActivitiesId", "WorkersId");

                    b.HasIndex("WorkersId");

                    b.ToTable("ActivityWorker", (string)null);

                    b.HasData(
                        new
                        {
                            ActivitiesId = 10,
                            WorkersId = "C"
                        },
                        new
                        {
                            ActivitiesId = 11,
                            WorkersId = "D"
                        },
                        new
                        {
                            ActivitiesId = 11,
                            WorkersId = "M"
                        },
                        new
                        {
                            ActivitiesId = 11,
                            WorkersId = "N"
                        },
                        new
                        {
                            ActivitiesId = 11,
                            WorkersId = "O"
                        },
                        new
                        {
                            ActivitiesId = 11,
                            WorkersId = "P"
                        },
                        new
                        {
                            ActivitiesId = 12,
                            WorkersId = "E"
                        },
                        new
                        {
                            ActivitiesId = 12,
                            WorkersId = "Q"
                        },
                        new
                        {
                            ActivitiesId = 12,
                            WorkersId = "R"
                        },
                        new
                        {
                            ActivitiesId = 12,
                            WorkersId = "S"
                        },
                        new
                        {
                            ActivitiesId = 13,
                            WorkersId = "F"
                        },
                        new
                        {
                            ActivitiesId = 13,
                            WorkersId = "G"
                        },
                        new
                        {
                            ActivitiesId = 14,
                            WorkersId = "A"
                        },
                        new
                        {
                            ActivitiesId = 14,
                            WorkersId = "C"
                        },
                        new
                        {
                            ActivitiesId = 14,
                            WorkersId = "D"
                        },
                        new
                        {
                            ActivitiesId = 14,
                            WorkersId = "L"
                        },
                        new
                        {
                            ActivitiesId = 15,
                            WorkersId = "B"
                        },
                        new
                        {
                            ActivitiesId = 15,
                            WorkersId = "F"
                        },
                        new
                        {
                            ActivitiesId = 15,
                            WorkersId = "G"
                        },
                        new
                        {
                            ActivitiesId = 15,
                            WorkersId = "R"
                        },
                        new
                        {
                            ActivitiesId = 16,
                            WorkersId = "E"
                        },
                        new
                        {
                            ActivitiesId = 16,
                            WorkersId = "N"
                        },
                        new
                        {
                            ActivitiesId = 16,
                            WorkersId = "S"
                        },
                        new
                        {
                            ActivitiesId = 1,
                            WorkersId = "A"
                        },
                        new
                        {
                            ActivitiesId = 2,
                            WorkersId = "B"
                        },
                        new
                        {
                            ActivitiesId = 3,
                            WorkersId = "C"
                        },
                        new
                        {
                            ActivitiesId = 4,
                            WorkersId = "D"
                        },
                        new
                        {
                            ActivitiesId = 5,
                            WorkersId = "E"
                        },
                        new
                        {
                            ActivitiesId = 6,
                            WorkersId = "F"
                        },
                        new
                        {
                            ActivitiesId = 7,
                            WorkersId = "G"
                        },
                        new
                        {
                            ActivitiesId = 8,
                            WorkersId = "A"
                        },
                        new
                        {
                            ActivitiesId = 8,
                            WorkersId = "H"
                        },
                        new
                        {
                            ActivitiesId = 8,
                            WorkersId = "I"
                        },
                        new
                        {
                            ActivitiesId = 9,
                            WorkersId = "B"
                        },
                        new
                        {
                            ActivitiesId = 9,
                            WorkersId = "J"
                        },
                        new
                        {
                            ActivitiesId = 9,
                            WorkersId = "K"
                        },
                        new
                        {
                            ActivitiesId = 9,
                            WorkersId = "L"
                        });
                });

            modelBuilder.Entity("TycoonFactoryScheduler.Domain.Entities.Activities.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasDiscriminator<int>("ActivityType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TycoonFactoryScheduler.Domain.Entities.Worker", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = "A",
                            CreationDate = new DateTime(2008, 6, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "WALL-E",
                            Model = "WALL-E"
                        },
                        new
                        {
                            Id = "B",
                            CreationDate = new DateTime(2004, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "I, Robot",
                            Model = "NS-5"
                        },
                        new
                        {
                            Id = "C",
                            CreationDate = new DateTime(1984, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Terminator",
                            Model = "T-800"
                        },
                        new
                        {
                            Id = "D",
                            CreationDate = new DateTime(1991, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Terminator",
                            Model = "T-1000"
                        },
                        new
                        {
                            Id = "E",
                            CreationDate = new DateTime(2003, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Battlestar Galactica",
                            Model = "Cavil"
                        },
                        new
                        {
                            Id = "F",
                            CreationDate = new DateTime(2003, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Battlestar Galactica",
                            Model = "Leoben"
                        },
                        new
                        {
                            Id = "G",
                            CreationDate = new DateTime(2003, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Battlestar Galactica",
                            Model = "D'Anna"
                        },
                        new
                        {
                            Id = "H",
                            CreationDate = new DateTime(2003, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Battlestar Galactica",
                            Model = "Simon"
                        },
                        new
                        {
                            Id = "I",
                            CreationDate = new DateTime(2003, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Battlestar Galactica",
                            Model = "Aaron"
                        },
                        new
                        {
                            Id = "J",
                            CreationDate = new DateTime(2003, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Battlestar Galactica",
                            Model = "Caprica"
                        },
                        new
                        {
                            Id = "K",
                            CreationDate = new DateTime(2003, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Battlestar Galactica",
                            Model = "Daniel"
                        },
                        new
                        {
                            Id = "L",
                            CreationDate = new DateTime(2003, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Battlestar Galactica",
                            Model = "Boomer"
                        },
                        new
                        {
                            Id = "M",
                            CreationDate = new DateTime(2016, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Westworld",
                            Model = "Dolores"
                        },
                        new
                        {
                            Id = "N",
                            CreationDate = new DateTime(2016, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Westworld",
                            Model = "Maeve"
                        },
                        new
                        {
                            Id = "O",
                            CreationDate = new DateTime(2016, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Westworld",
                            Model = "Bernard"
                        },
                        new
                        {
                            Id = "P",
                            CreationDate = new DateTime(2016, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Westworld",
                            Model = "Hector"
                        },
                        new
                        {
                            Id = "Q",
                            CreationDate = new DateTime(2016, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Westworld",
                            Model = "Teddy"
                        },
                        new
                        {
                            Id = "R",
                            CreationDate = new DateTime(1982, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Blade Runner",
                            Model = "Nexus"
                        },
                        new
                        {
                            Id = "S",
                            CreationDate = new DateTime(2014, 12, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Manufacturer = "Big Hero 6",
                            Model = "Baymax"
                        });
                });

            modelBuilder.Entity("TycoonFactoryScheduler.Domain.Entities.Activities.BuildComponentActivity", b =>
                {
                    b.HasBaseType("TycoonFactoryScheduler.Domain.Entities.Activities.Activity");

                    b.HasDiscriminator().HasValue(1);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Flux capacitor",
                            End = new DateTime(2023, 3, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fusion engine",
                            End = new DateTime(2023, 3, 3, 2, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Description = "Bionic arm",
                            End = new DateTime(2023, 3, 3, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Description = "Thought sensor",
                            End = new DateTime(2023, 3, 3, 5, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Description = "Interestellar jump engine",
                            End = new DateTime(2023, 3, 3, 3, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Description = "Synthetic skin",
                            End = new DateTime(2023, 3, 3, 1, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Description = "Bionic leg",
                            End = new DateTime(2023, 3, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TycoonFactoryScheduler.Domain.Entities.Activities.BuildMachineActivity", b =>
                {
                    b.HasBaseType("TycoonFactoryScheduler.Domain.Entities.Activities.Activity");

                    b.HasDiscriminator().HasValue(2);

                    b.HasData(
                        new
                        {
                            Id = 8,
                            Description = "Autonomous car",
                            End = new DateTime(2023, 3, 3, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 12, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Description = "Time machine",
                            End = new DateTime(2023, 3, 3, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 4, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Description = "Battlestar",
                            End = new DateTime(2023, 3, 3, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 6, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Description = "Flying car",
                            End = new DateTime(2023, 3, 3, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 7, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Description = "Laser gun",
                            End = new DateTime(2023, 3, 3, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 5, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Description = "Augmented reality glasses",
                            End = new DateTime(2023, 3, 3, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 10, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Description = "Teletransporter",
                            End = new DateTime(2023, 3, 4, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 4, 3, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Description = "Laser sword",
                            End = new DateTime(2023, 3, 4, 4, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Description = "Hoverboard",
                            End = new DateTime(2023, 3, 4, 1, 0, 0, 0, DateTimeKind.Unspecified),
                            Start = new DateTime(2023, 3, 3, 17, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ActivityWorker", b =>
                {
                    b.HasOne("TycoonFactoryScheduler.Domain.Entities.Activities.Activity", null)
                        .WithMany()
                        .HasForeignKey("ActivitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TycoonFactoryScheduler.Domain.Entities.Worker", null)
                        .WithMany()
                        .HasForeignKey("WorkersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
